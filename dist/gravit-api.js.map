{"version":3,"sources":["webpack://GravitApi/webpack/universalModuleDefinition","webpack://GravitApi/webpack/bootstrap","webpack://GravitApi/./node_modules/get-random-values/index.js","webpack://GravitApi/./node_modules/global/window.js","webpack://GravitApi/./node_modules/isomorphic-ws/browser.js","webpack://GravitApi/(webpack)/buildin/global.js","webpack://GravitApi/./src/index.js","webpack://GravitApi/crypto (ignored)"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,aAAa,mBAAO,CAAC,sDAAe;AACpC,iBAAiB,mBAAO,CAAC,eAAQ;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChCA;;AAEA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;;AAEA;;;;;;;;;;;;;ACZA;;AAEA;;AAEA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;;AAEA;;;;;;;;;;;;;AChBA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA,kBAAkB,mBAAO,CAAC,8DAAe;AACzC,wBAAwB,mBAAO,CAAC,oEAAmB;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,gBAAgB,gBAAgB;AAChC;AACA,uBAAuB;AACvB;AACA;AACA,wBAAwB,6CAA6C;AACrE;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;ACnGA,e","file":"gravit-api.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GravitApi\"] = factory();\n\telse\n\t\troot[\"GravitApi\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","var window = require('global/window');\nvar nodeCrypto = require('crypto');\n\nfunction getRandomValues(buf) {\n  if (window.crypto && window.crypto.getRandomValues) {\n    return window.crypto.getRandomValues(buf);\n  }\n  if (typeof window.msCrypto === 'object' && typeof window.msCrypto.getRandomValues === 'function') {\n    return window.msCrypto.getRandomValues(buf);\n  }\n  if (nodeCrypto.randomBytes) {\n    if (!(buf instanceof Uint8Array)) {\n      throw new TypeError('expected Uint8Array');\n    }\n    if (buf.length > 65536) {\n      var e = new Error();\n      e.code = 22;\n      e.message = 'Failed to execute \\'getRandomValues\\' on \\'Crypto\\': The ' +\n        'ArrayBufferView\\'s byte length (' + buf.length + ') exceeds the ' +\n        'number of bytes of entropy available via this API (65536).';\n      e.name = 'QuotaExceededError';\n      throw e;\n    }\n    var bytes = nodeCrypto.randomBytes(buf.length);\n    buf.set(bytes);\n    return buf;\n  }\n  else {\n    throw new Error('No secure random number generator available.');\n  }\n}\n\nmodule.exports = getRandomValues;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nmodule.exports = ws\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","const WebSocket = require('isomorphic-ws');\r\nconst getRandomValues = require('get-random-values');\r\n\r\nmodule.exports = class GravitApi {\r\n    constructor() {\r\n        this.requestMap = new Map();\r\n    }\r\n\r\n    /**\r\n     * Connect to websocket\r\n     * @param {string} url\r\n     * @return {Promise<GravitApi | Error>}\r\n     */\r\n    connect(url) {\r\n        return new Promise((resolve, reject) => {\r\n            this.socket = new WebSocket(url);\r\n            this.socket.onopen = () => {\r\n                this.onOpen();\r\n                resolve(this);\r\n            };\r\n            this.socket.onerror = (err) => {\r\n                this.onError();\r\n                reject(err);\r\n            };\r\n            this.socket.onclose = this.onClose;\r\n            this.socket.onmessage = this.onMessage;\r\n            this.socket.GravitApi = this;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Close websocket connection\r\n     */\r\n    close() {\r\n        this.socket.close();\r\n    }\r\n\r\n    /**\r\n     * Send request for websocket\r\n     * @param {string} type request type\r\n     * @param {object} obj request data\r\n     * @return {Promise<object>} response data\r\n     */\r\n    send(type, obj = {}) {\r\n        return new Promise((resolve, reject) => {\r\n            if (typeof type !== \"string\" || type === '')\r\n                reject({type: \"error\", error: \"Invalid request type\"});\r\n            obj.type = type;\r\n            obj.requestUUID = this.getUUIDv4();\r\n\r\n            this.requestMap.set(obj.requestUUID, data => {\r\n                if ([\"error\", \"exception\"].includes(data.type)) reject(data);\r\n                else resolve(data);\r\n            });\r\n            this.socket.send(JSON.stringify(obj));\r\n        })\r\n    }\r\n\r\n    /**\r\n     * @return {string} uuid v4 (random)\r\n     */\r\n    getUUIDv4() {\r\n        return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n            (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n        );\r\n    }\r\n\r\n    /* Events */\r\n    onOpen() {\r\n        console.log('Connection established');\r\n    }\r\n\r\n    onClose(event) {\r\n        if (event.wasClean) return console.log('Connection closed');\r\n        if (event.code === 1006) console.error('Connection break');\r\n        else {\r\n            console.error('Unknown error');\r\n            console.dir(event);\r\n        }\r\n    }\r\n\r\n    onMessage(event) {\r\n        const obj = JSON.parse(event.data);\r\n        const requestMap = this.GravitApi.requestMap;\r\n        if (obj.requestUUID && requestMap.has(obj.requestUUID)) {\r\n            requestMap.get(obj.requestUUID)(obj);\r\n            requestMap.delete(obj.requestUUID);\r\n        } else {\r\n            if (obj.type === \"error\") console.error(obj.error);\r\n            else {\r\n                console.error('Unknown message');\r\n                console.dir(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    onError() {\r\n        console.error('Connection error');\r\n    }\r\n}","/* (ignored) */"],"sourceRoot":""}